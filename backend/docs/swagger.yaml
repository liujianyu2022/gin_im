definitions:
  api.LoginRequest:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  api.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
paths:
  /user/information:
    get:
      consumes:
      - application/json
      description: Get user information by token
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get User Information
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User Login information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register
      tags:
      - user
  /user/update:
    put:
      consumes:
      - multipart/form-data
      description: Update
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户名
        in: formData
        name: name
        type: string
      - description: 密码
        in: formData
        name: password
        type: string
      - description: 邮箱
        in: formData
        name: email
        type: string
      - description: 电话
        in: formData
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update
      tags:
      - user
swagger: "2.0"
